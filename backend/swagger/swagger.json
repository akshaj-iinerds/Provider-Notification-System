{
  "openapi": "3.0.0",
  "info": {
    "title": "Consultation API",
    "version": "1.0.0",
    "description": "API for managing medical consultations"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/api/provider/addprovider": {
      "post": {
        "summary": "Add a new provider",
        "tags": ["Database APIs"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firstName",
                  "lastName",
                  "name",
                  "email",
                  "specialization",
                  "taxonomy",
                  "npiNumber",
                  "state",
                  "licenseNumber",
                  "licenseExpiryDate"
                ],
                "properties": {
                  "firstName": { "type": "string" },
                  "lastName": { "type": "string" },
                  "name": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "specialization": { "type": "string" },
                  "taxonomy": { "type": "string" },
                  "npiNumber": { "type": "string" },
                  "state": { "type": "string" },
                  "licenseNumber": { "type": "string" },
                  "licenseExpiryDate": { "type": "string", "format": "date" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Provider added successfully" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/provider/verify/{npiNumber}": {
      "post": {
        "summary": "Verify a provider using NPI",
        "tags": ["Verification APIs"],
        "parameters": [
          {
            "name": "npiNumber",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Verification result" },
          "400": { "description": "Error verifying provider" }
        }
      }
    },
    "/api/provider/license/{licenseNumber}": {
      "get": {
        "summary": "Get provider by license number",
        "tags": ["Database APIs"],
        "parameters": [
          {
            "name": "licenseNumber",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Provider details" },
          "404": { "description": "Provider not found" }
        }
      }
    },
    "/api/provider/taxonomy/{taxonomy}": {
      "get": {
        "summary": "Get providers by taxonomy (from Database)",
        "tags": ["Database APIs"],
        "parameters": [
          {
            "name": "taxonomy",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "List of providers" },
          "404": { "description": "No providers found" }
        }
      }
    },
    "/api/provider/organization": {
      "get": {
        "summary": "Get providers by organization and state (via NPPES API)",
        "tags": ["External APIs"],
        "parameters": [
          {
            "name": "organizationName",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "List of providers" },
          "404": { "description": "No providers found" }
        }
      }
    },
    "/api/provider/taxonomy/{taxonomy}/state/{state}": {
      "get": {
        "summary": "Get providers by taxonomy and state (via NPPES API)",
        "tags": ["External APIs"],
        "parameters": [
          {
            "name": "taxonomy",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "List of providers" },
          "404": { "description": "No providers found" }
        }
      }
    },
    "/api/provider/npi/{npiNumber}": {
      "get": {
        "summary": "Get provider by NPI (from Database)",
        "tags": ["Database APIs"],
        "parameters": [
          {
            "name": "npiNumber",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Provider details" },
          "404": { "description": "Provider not found" }
        }
      }
    },
    "/api/provider/verified": {
      "get": {
        "summary": "Get all verified providers (from Database)",
        "tags": ["Database APIs"],
        "responses": {
          "200": { "description": "List of verified providers" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/provider/license-check/{npiNumber}/{state}": {
      "get": {
        "summary": "Check provider license in a given state (NPPES API + Database)",
        "tags": ["External APIs"],
        "parameters": [
          {
            "name": "npiNumber",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "License check result" },
          "404": { "description": "Provider not found" }
        }
      }
    },
    "/api/license/check-license-expiry": {
    "get": {
      "summary": "Check and notify providers with expired licenses",
      "description": "Fetches all providers, checks if their medical license has expired, and sends email notifications to the corresponding providers.",
      "tags": ["Providers"],
      "responses": {
        "200": {
          "description": "License expiry check completed successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "License expiry check completed."
                  },
                  "expired_providers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "provider_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "provider_name": {
                          "type": "string",
                          "example": "Dr. John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "license_expiry_date": {
                          "type": "string",
                          "format": "date",
                          "example": "2024-03-01"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal server error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
    "/api/consultations": {
      "post": {
        "summary": "Book a consultation for a patient",
        "description": "Assigns an available provider based on the patient's consultation reason and schedules a consultation.",
        "tags": ["Consultations"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["patient_id", "date", "time", "priority"],
                "properties": {
                  "patient_id": {
                    "type": "integer",
                    "example": 123
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-03-21"
                  },
                  "time": {
                    "type": "string",
                    "example": "10:00 AM"
                  },
                  "priority": {
                    "type": "string",
                    "enum": ["normal", "urgent"],
                    "example": "normal"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Consultation booked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Consultation booked successfully"
                    },
                    "consultation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "patient_id": {
                          "type": "integer",
                          "example": 123
                        },
                        "provider_id": {
                          "type": "integer",
                          "example": 456
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "example": "2025-03-21"
                        },
                        "time": {
                          "type": "string",
                          "example": "10:00 AM"
                        },
                        "status": {
                          "type": "string",
                          "example": "Scheduled"
                        },
                        "priority": {
                          "type": "string",
                          "example": "normal"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No available providers or scheduling conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "All providers are currently busy at this time. Please choose another time."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Patient or provider not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Patient not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieve all consultations",
        "description": "Fetches a list of all consultations.",
        "tags": ["Consultations"],
        "responses": {
          "200": {
            "description": "A list of consultations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "patient_id": {
                        "type": "integer",
                        "example": 5
                      },
                      "provider_id": {
                        "type": "integer",
                        "example": 3
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-03-21"
                      },
                      "time": {
                        "type": "string",
                        "example": "10:00 AM"
                      },
                      "status": {
                        "type": "string",
                        "example": "Scheduled"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/consultations/reminder": {
      "get": {
        "summary": "Send reminders for upcoming consultations",
        "description": "Checks for consultations scheduled for tomorrow and sends email reminders to providers.",
        "tags": ["Consultations"],
        "responses": {
          "200": {
            "description": "Reminder emails sent successfully or no consultations for tomorrow.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Reminder emails sent successfully."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/consultations/{id}": {
      "put": {
        "summary": "Update a consultation",
        "description": "Reschedules a consultation by updating the date, time, and priority.",
        "tags": ["Consultations"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the consultation to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-03-20"
                  },
                  "time": {
                    "type": "string",
                    "example": "10:00 AM"
                  },
                  "priority": {
                    "type": "string",
                    "example": "urgent"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Consultation updated successfully"
          },
          "400": {
            "description": "Invalid input (e.g., incorrect date format)"
          },
          "404": {
            "description": "Consultation not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a consultation",
        "description": "Deletes a consultation by ID and notifies the assigned provider.",
        "tags": ["Consultations"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the consultation to be deleted."
          }
        ],
        "responses": {
          "200": {
            "description": "Consultation deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Consultation deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Consultation not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Consultation not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/consultations/missed/{consultationId}": {
      "put": {
        "summary": "Mark a consultation as missed",
        "description": "Updates the status of a consultation to \"Missed\" and notifies the provider.",
        "tags": ["Consultations"],
        "parameters": [
          {
            "in": "path",
            "name": "consultationId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the consultation to mark as missed."
          }
        ],
        "responses": {
          "200": {
            "description": "Consultation marked as missed, provider notified.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Consultation already marked as missed."
          },
          "404": {
            "description": "Consultation or provider not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/consultations/{consultation_id}/status": {
      "put": {
        "summary": "Update Consultation Status to Completed",
        "description": "Marks a consultation as completed without authentication.",
        "tags": ["Consultations"],
        "parameters": [
          {
            "in": "path",
            "name": "consultation_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the consultation to update."
          }
        ],
        "responses": {
          "200": {
            "description": "Consultation marked as completed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Consultation marked as completed"
                    },
                    "consultation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "provider_id": {
                          "type": "integer"
                        },
                        "status": {
                          "type": "string",
                          "example": "Completed"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Consultation not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/consultations/consultation-summary/{provider_id}/{date}": {
      "get": {
        "summary": "Get consultation summary for a provider on a given date.",
        "description": "Fetches all consultations for a specific provider on a given date and emails the summary.",
        "tags": ["Consultations"],
        "parameters": [
          {
            "in": "path",
            "name": "provider_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the provider."
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date for which the summary is needed (YYYY-MM-DD)."
          }
        ],
        "responses": {
          "200": {
            "description": "Consultation summary sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Consultation summary sent successfully"
                    },
                    "summary": {
                      "type": "string",
                      "example": "Consultation Summary for Dr. John Doe on 2025-03-25"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No consultations found or provider not found."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/billing": {
      "post": {
        "summary": "Create a new billing record",
        "description": "Creates a billing record for a provider and sends email notification",
        "tags": ["Billing"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["provider_id", "consultation_id", "duration_minutes", "billing_amount", "date_range"],
                "properties": {
                  "provider_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "consultation_id": {
                    "type": "integer",
                    "example": 101
                  },
                  "duration_minutes": {
                    "type": "integer",
                    "example": 30
                  },
                  "billing_amount": {
                    "type": "number",
                    "format": "float",
                    "example": 150.50
                  },
                  "date_range": {
                    "type": "string",
                    "example": "June 2024"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Billing record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Billing record created, notification sent via email."
                    },
                    "billing": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "provider_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "consultation_id": {
                          "type": "integer",
                          "example": 101
                        },
                        "duration_minutes": {
                          "type": "integer",
                          "example": 30
                        },
                        "billing_amount": {
                          "type": "number",
                          "format": "float",
                          "example": 150.50
                        },
                        "date_range": {
                          "type": "string",
                          "example": "June 2024"
                        }
                      }
                    },
                    "notification": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "provider_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "type": {
                          "type": "string",
                          "example": "billing"
                        },
                        "message": {
                          "type": "string",
                          "example": "Billing summary for June 2024 has been generated. Total: $150.50."
                        },
                        "status": {
                          "type": "string",
                          "example": "unread"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Provider not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Provider not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get all billing records",
        "description": "Retrieves a list of all billing records",
        "tags": ["Billing"],
        "responses": {
          "200": {
            "description": "List of billing records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "provider_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "consultation_id": {
                        "type": "integer",
                        "example": 101
                      },
                      "duration_minutes": {
                        "type": "integer",
                        "example": 30
                      },
                      "billing_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 150.50
                      },
                      "date_range": {
                        "type": "string",
                        "example": "June 2024"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/billing/{provider_id}": {
      "get": {
        "summary": "Get billing records by provider ID",
        "description": "Retrieves all billing records for a specific provider",
        "tags": ["Billing"],
        "parameters": [
          {
            "in": "path",
            "name": "provider_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the provider"
          }
        ],
        "responses": {
          "200": {
            "description": "List of billing records for the provider",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "provider_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "consultation_id": {
                        "type": "integer",
                        "example": 101
                      },
                      "duration_minutes": {
                        "type": "integer",
                        "example": 30
                      },
                      "billing_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 150.50
                      },
                      "date_range": {
                        "type": "string",
                        "example": "June 2024"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/billing/{id}": {
      "put": {
        "summary": "Update a billing record",
        "description": "Updates a billing record and notifies the provider",
        "tags": ["Billing"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the billing record"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "duration_minutes": {
                    "type": "integer",
                    "example": 45
                  },
                  "billing_amount": {
                    "type": "number",
                    "format": "float",
                    "example": 200.00
                  },
                  "date_range": {
                    "type": "string",
                    "example": "June 2024"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Billing record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Billing record updated and notification sent."
                    },
                    "billing": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "provider_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "consultation_id": {
                          "type": "integer",
                          "example": 101
                        },
                        "duration_minutes": {
                          "type": "integer",
                          "example": 45
                        },
                        "billing_amount": {
                          "type": "number",
                          "format": "float",
                          "example": 200.00
                        },
                        "date_range": {
                          "type": "string",
                          "example": "June 2024"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Billing record or provider not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a billing record",
        "description": "Deletes a billing record and notifies the provider",
        "tags": ["Billing"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the billing record to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Billing record deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Billing record deleted and email notification sent."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Billing record or provider not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/notification": {
    "get": {
      "summary": "Get all notifications",
      "description": "Retrieves all notifications ordered by creation date",
      "tags": ["Notifications"],
      "responses": {
        "200": {
          "description": "List of notifications",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "provider_id": { "type": "integer", "example": 101 },
                    "type": { "type": "string", "example": "system" },
                    "message": { "type": "string", "example": "System update at 5 PM" },
                    "status": { "type": "string", "example": "unread" },
                    "createdAt": { "type": "string", "format": "date-time" }
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal server error"
        }
      }
    }
  },
  "/api/notification/{id}": {
    "get": {
      "summary": "Get a single notification",
      "description": "Retrieves a notification by ID",
      "tags": ["Notifications"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": { "type": "integer" },
          "description": "ID of the notification"
        }
      ],
      "responses": {
        "200": {
          "description": "Notification details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer", "example": 1 },
                  "provider_id": { "type": "integer", "example": 101 },
                  "type": { "type": "string", "example": "system" },
                  "message": { "type": "string", "example": "System update at 5 PM" },
                  "status": { "type": "string", "example": "unread" },
                  "createdAt": { "type": "string", "format": "date-time" }
                }
              }
            }
          }
        },
        "404": {
          "description": "Notification not found"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    },
    "delete": {
      "summary": "Delete a notification",
      "description": "Permanently removes a notification from the system",
      "tags": ["Notifications"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": { "type": "integer" },
          "description": "ID of the notification to delete"
        }
      ],
      "responses": {
        "200": {
          "description": "Notification deleted successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string", "example": "Notification deleted successfully" }
                }
              }
            }
          }
        },
        "404": {
          "description": "Notification not found"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    }
  },
  "/api/notification/{id}/mark-read": {
    "put": {
      "summary": "Mark a notification as read",
      "description": "Updates the status of a notification to 'read'",
      "tags": ["Notifications"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": { "type": "integer" },
          "description": "ID of the notification"
        }
      ],
      "responses": {
        "200": {
          "description": "Notification marked as read",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string", "example": "Notification marked as read" },
                  "notification": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer", "example": 1 },
                      "status": { "type": "string", "example": "read" }
                    }
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Notification not found"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    }
  },
  "/api/notification/failure-notification": {
    "post": {
      "summary": "Send system downtime notification",
      "description": "Sends a system downtime notification to all providers",
      "tags": ["Notifications"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Scheduled maintenance at 2 AM" }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "System downtime notifications sent",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string", "example": "System downtime notifications sent successfully to all providers" },
                  "notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "provider_id": { "type": "integer", "example": 101 },
                        "message": { "type": "string", "example": "Scheduled maintenance at 2 AM" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "No providers found"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    }
  }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {}
  }
}